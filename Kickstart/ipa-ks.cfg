# Use CDROM installation media
install
cdrom
# Use text install
text
# Firewall configuration
firewall --enabled
# Keyboard layouts
keyboard --vckeymap=de --xlayouts='de'
# System language
# lang de_DE.UTF-8
lang us_US.UTF-8

firstboot --disable


# Network information
# Bridge br0 with onboard NIC will be used for KVM guests
# USB NIC enp0s20f0u3 is the uplink for our LabNet
# 192.168.1.0/24 is the external network for OpenStack
# 192.168.24.0/24 is the provisioning network for OpenStack
network --bootproto=static --device=br0 --bridgeslave=enp0s31f6 --activate --nodefroute  --onboot=yes
network --bootproto=static --device=br1 --bridgeslave=enp0s20f0u4 --ip=192.168.24.254 --netmask=255.255.255.0 --activate --nodefroute --noipv6 --onboot=yes
network --bootproto=static --device=enp0s20f0u3 --ip=192.168.0.51 --netmask=255.255.255.0 --gateway=192.168.0.1 --nameserver=85.25.159.110 --activate --onboot=yes
network --bootproto=static --device=br1 --activate --ip=192.168.1.254 --netmask=255.255.255.0 --vlanid=100 --nodefroute --noipv6 --onboot=yes
network  --hostname=ipa.bxlab.lunetix.org

# Root password
# python -c 'import crypt; print(crypt.crypt("My Password", "$6$_My_PieceOfGrain"))'
rootpw --iscrypted $6$oqLohaM3rcUJ$HZtses1VFhkm7vdnzJwT6xdBS68fX9K4yLch6MIzu1k8RqRo4XZPeMMXKFOZDbW3BmSLvBOpUNL7ymUQWNSsI0
# SELinux configuration
selinux --enforcing
# System services
services --enabled="chronyd"
# Do not configure the X Window System
skipx
# System timezone
timezone Europe/Berlin --isUtc --ntpservers=0.rhel.pool.ntp.org,1.rhel.pool.ntp.org,2.rhel.pool.ntp.org

# Disk Partitioning
# Ignore all Disks except sdb
ignoredisk --only-use=sdb
# Partition clearing information
clearpart --none --initlabel
# Clear the Master Boot Record
zerombr
# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=sdb
# Partition clearing information
clearpart --all --initlabel --drives=sdb
# Partitioning
part /boot --fstype="xfs" --ondisk=sdb --size=1024
part pv.01 --fstype="lvmpv" --ondisk=sdb --size=61440
part pv.02 --fstype="lvmpv" --ondisk=sdb --size=20480
part pv.03 --fstype="lvmpv" --ondisk=sdb --size=10240 --grow
volgroup vg_sys pv.01
volgroup vg_data pv.03
logvol /  --fstype="xfs" --percent=80 --name=root --vgname=vg_sys


syspurpose --role="Red Hat Enterprise Linux Server" --sla="Self-Support" --usage="Development/Test"


# Preinstallation Scripts
%pre --logfile /root/ks-pre.log
%end

# Postinstallation Scripts
%post --logfile /root/ks-post.log
cat <<EOF >/etc/resolv.conf
nameserver 11.22.33.44
EOF

subscription-manager register --org=1234567 --activationkey=rhel-28344825-4c42-4197-9de7-d95b4727d7e4
subscription-manager repos --disable="*"
subscription-manager repos \
    --enable=rhel-8-for-x86_64-baseos-rpms \
    --enable=rhel-8-for-x86_64-supplementary-rpms \
    --enable=rhel-8-for-x86_64-appstream-rpms \
    --enable=ansible-2.8-for-rhel-8-x86_64-rpms \

#    --enable=rhel-8-for-x86_64-highavailability-rpms \
#    --enable=rhel-8-for-x86_64-sap-solutions-rpms \
#    --enable=rhel-8-for-x86_64-sap-netweaver-rpms \
#    --enable=ansible-2-for-rhel-8-x86_64-rpms \
#    --enable=satellite-tools-6.5-for-rhel-8-x86_64-rpms \
#    --enable=rh-sso-7.3-for-rhel-8-x86_64-rpms \
#    --enable=jb-coreservices-1-for-rhel-8-x86_64-rpms \
#    --enable=jb-eap-7.2-for-rhel-8-x86_64-rpms \
#    --enable=rhv-4-mgmt-agent-for-rhel-8-x86_64-rpms \
#    --enable=cert-1-for-rhel-8-x86_64-rpms \


subscription-manager release --unset


yum -y install vim wget git net-tools bind-utils bash-completion kexec-tools sos psacct
yum -y update
mkdir -m0700 /root/.ssh/
cat <<EOF >/root/.ssh/authorized_keys
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDaAPSlXxIZqmYTESbtDBo3MfcFwcsEruy9rhUe6+1nAv65oKaugdD7Vqk5dOY57tYmYoXsf+YSsxwDdnNUCFM5me8bWbtFaIMdrjYh2MN6YJx0//Sm6b7m65oVF+FPb2PjmfJJm3byDePuUkUXKj58alNz4FpXJChfzEmJAlmBKexunasyX1vInFF+5LWftcSa5LSPXKLSIF/Oq/bkf8FxubM55JA/xZujyLUJaVC3pN2ixZzVvmM0lqzYOY2SEqNCESB+4q6pNLF/wXPyI+rbJX+brLih1MP3nAofYk64zWmr8yOt6Dp3QH9rzIRY1QLf8lZPRNJo9zYG8KeP4Inz shetze@shetze.remote.csb
EOF
chmod 0600 /root/.ssh/authorized_keys
restorecon -R /root/.ssh/

yum -y install rng-tools
systemctl enable --now rngd

yum -y module enable idm:DL1
yum distro-sync
yum -y module install idm:DL1/dns

firewall-cmd --permanent --add-service={freeipa-ldap,freeipa-ldaps,dns,http,https,kerberos}
firewall-cmd --reload

ipa-server-install --realm BXLAB.LUNETIX.ORG --ds-password '94g3wBYqEz4l' --admin-password 'IPojOB#Ug4H5' --unattended --setup-dns --forwarder 11.22.33.44 --auto-reverse --allow-zone-overlap

yum -y install cockpit cockpit-machines cockpit-composer
firewall-cmd --add-service=cockpit --permanent
systemctl enable --now cockpit.socket
systemctl enable lorax-composer.service
CERT_FILE=/etc/pki/tls/certs/$(hostname).pem
KEY_FILE=/etc/pki/tls/private/$(hostname).key
REALM=$(hostname -d|tr '[:lower:]' '[:upper:]');
ipa-getcert request -f ${CERT_FILE} -k ${KEY_FILE} -D $(hostname --fqdn) -C "sed -n w/etc/cockpit/ws-certs.d/50-from-certmonger.cert ${CERT_FILE} ${KEY_FILE}" -K HTTP/$(hostname --fqdn)@${REALM}

yum -y module install virt
yum -y install virt-install

yum -y install targetcli
firewall-cmd --add-service=iscsi-target --permanent
systemctl enable target

yum -y install ansible

%end

# Packages
%packages
@^Minimal Install
NetworkManager-wifi

#@^Server
#@^Server with GUI
#@^Workstation
#@^Virtualization Host
#@^Custom Operating System

#@RPM Development Tools
#@Container Management
#@Smart Card Support
#@.NET Core Development
#@Network Servers
#@Development Tools
#@Headless Management
#@System Tools
#@Graphical Administration Tools
#@Scientific Support
#@Security Tools
#@Legacy UNIX Compatibility
%end
